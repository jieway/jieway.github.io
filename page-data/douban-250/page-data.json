{"componentChunkName":"component---src-templates-blog-post-js","path":"/douban-250/","result":{"data":{"site":{"siteMetadata":{"author":"weijiew","homeCity":"China"}},"markdownRemark":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 26.060606060606062%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" src=\"//music.163.com/outchain/player?type=2&amp;id=29999850&amp;auto=1&amp;height=66\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<h1>前言</h1>\n<p>记录一次爬虫练习，爬取豆瓣电影 Top 250 并存入表格中。</p>\n<p>起因是同学发过来一段代码，让我帮忙改改 bug，采用的是 <a href=\"https://github.com/psf/requests-html\">requests-html</a> 来提取信息，但当我下载这个包时环境出现了问题。</p>\n<p>于是我将其修改成了用 BeautifulSoup 来提取信息。然后采用 pandas 将如数据存入 xlsx 表格中。是一次很好的学习案例，从中再次练习了 bs 和正则表达式的使用。同时也让我意识到以后要多从实践中学习，纸上得来终觉浅。</p>\n<p>之前没有注意过这个包，查了一下，发现还挺强大。</p>\n<blockquote>\n<p> requests-html 是基于现有的框架 PyQuery、Requests、lxml、beautifulsoup4等库进行了二次封装，作者将Requests设计的简单强大的优点带到了该项目中。</p>\n</blockquote>\n<h1>注意</h1>\n<p>注意 BeautifulSoup 的使用，<code class=\"language-text\">title = soup.find(property=&quot;v:itemreviewed&quot;).text</code> 根据属性的实际值可以锁定到具体位置。</p>\n<h1>完整代码</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    movInfoAll <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    urls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string-interpolation\"><span class=\"token string\">f'https://movie.douban.com/top250?start=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">25</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">&amp;filter='</span></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> url <span class=\"token keyword\">in</span> urls<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 请求头</span>\n        headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'</span><span class=\"token punctuation\">}</span>\n        ret <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n        html <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n        pattern <span class=\"token operator\">=</span> <span class=\"token string\">' &lt;div class=\"pic\">.*?href=\"(.*?)\">'</span>\n        links <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">,</span>re<span class=\"token punctuation\">.</span>S<span class=\"token punctuation\">)</span>\n        title_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        years_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        score_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> link <span class=\"token keyword\">in</span> links<span class=\"token punctuation\">:</span>\n            \n            res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n            html <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n            soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span>\n            \n            <span class=\"token comment\"># 电影名</span>\n            title <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token builtin\">property</span><span class=\"token operator\">=</span><span class=\"token string\">\"v:itemreviewed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n            title_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>\n            \n            <span class=\"token comment\"># 电影年份</span>\n            year <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token builtin\">property</span><span class=\"token operator\">=</span><span class=\"token string\">\"v:initialReleaseDate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n            years_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 电影评分</span>\n            score <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token builtin\">property</span><span class=\"token operator\">=</span><span class=\"token string\">\"v:average\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n            score_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> score<span class=\"token punctuation\">)</span>\n\n        movInfo <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>title_list<span class=\"token punctuation\">,</span> years_list<span class=\"token punctuation\">,</span>score_list<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>T <span class=\"token comment\"># 将数据存入二维表格中</span>\n        movInfo<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'影名'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'年份'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'评分'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 二维表格的第一行</span>\n        movInfoAll <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>movInfoAll<span class=\"token punctuation\">,</span> movInfo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 休眠两秒</span>\n\n    <span class=\"token comment\"># 写入文件</span>\n    movInfoAll<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span><span class=\"token string\">'Moviesall_douban.xlsx'</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'豆瓣电影Top250'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    writeFile<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"前言 记录一次爬虫练习，爬取豆瓣电影 Top 250 并存入表格中。 起因是同学发过来一段代码，让我帮忙改改 bug，采用的是 requests-html 来提取信息，但当我下载这个包时环境出现了问题。 于是我将其修改成了用 BeautifulSoup…","fields":{"tagSlugs":["/tags/爬虫/"]},"frontmatter":{"title":"爬取豆瓣电影 Top 250","tags":["爬虫"],"date":"June 26, 2020"}}},"pageContext":{"slug":"/douban-250/"}}}