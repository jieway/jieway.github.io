{"componentChunkName":"component---src-templates-blog-post-js","path":"/r-summary/","result":{"data":{"site":{"siteMetadata":{"author":"weijiew","homeCity":"China"}},"markdownRemark":{"html":"<h1>文件设置</h1>\n<h2>列出当前工作空间目录下的文件</h2>\n<pre><code class=\"language-r\">> list.files()\n [1] \"Default.rdp\"                          \n....\n> dir()\n [1] \"Default.rdp\"                          \n [2] \"desktop.ini\"                          \n...\n</code></pre>\n<h2>获取当前工作路径</h2>\n<pre><code class=\"language-r\">> getwd()\n[1] \"c:/\"\n</code></pre>\n<h2>设置当前工作路径：</h2>\n<pre><code class=\"language-r\">> setwd(\"d:/我的文档\")\n</code></pre>\n<h2>退出并保持当前工作空间</h2>\n<pre><code class=\"language-r\">> q()\n</code></pre>\n<h2>通过args查看函数的所有参数</h2>\n<pre><code class=\"language-r\">> args(list.files)\nfunction (path = \".\", pattern = NULL, all.files = FALSE, \n    full.names = FALSE, recursive = FALSE, ignore.case = FALSE, \n    include.dirs = FALSE, no.. = FALSE) \nNULL\n</code></pre>\n<h2>获取当前工作目录并赋值给old.dir</h2>\n<pre><code class=\"language-r\">> old.dir &#x3C;- getwd()\n</code></pre>\n<h2>在当前工作目录想创建一个文件</h2>\n<pre><code class=\"language-r\">> dir.create(\"testdir\")\n</code></pre>\n<h2>列出当前目录下的文件</h2>\n<pre><code class=\"language-r\">> list.files()\n[1] \"mytest.R\"\n</code></pre>\n<h2>使用file.info()来查看文件信息</h2>\n<pre><code class=\"language-r\">> file.info(\"mytest.R\")\n         size isdir mode               mtime               ctime\nmytest.R    0 FALSE  666 2019-10-29 09:05:20 2019-10-29 09:02:31\n                       atime exe\nmytest.R 2019-10-29 09:05:20  no\n</code></pre>\n<h1>数据类型</h1>\n<p>一共五种基本数据类型，分别是：</p>\n<ol>\n<li>数值型：numeric</li>\n<li>逻辑型：logical</li>\n<li>字符型：character</li>\n<li>负数型：complex</li>\n<li>\n<p>i整数型：nteger</p>\n<h2>判断并查看数据类型</h2>\n<p><strong>numeric：</strong></p>\n<pre><code class=\"language-r\">> x1 &#x3C;- c(1,2,3,4)\n> is.numeric(x1)\n[1] TRUE\n> x2 &#x3C;- TRUE\n> is.logical(x2)\n[1] TRUE\n> x3 &#x3C;- c(\"weijiew.com\")\n> is.character(x3)\n[1] TRUE\n> is.numeric(x3)\n[1] FALSE\n> x4 &#x3C;- c(2i)\n> is.complex(x4)\n[1] TRUE\n> x5 &#x3C;- c(1L)\n> is.integer(x5)\n[1] TRUE\n>  class(x1)\n[1] \"numeric\"\n> class(x2)\n[1] \"logical\"\n> mode(x3)\n[1] \"character\"\n> typeof(x4)\n[1] \"complex\"\n> data &#x3C;- data.frame(c1 = c(1,2,3),c2 = 1:3, c3=TRUE , c4=\"mingtian\")\n> sapply(data,mode)\n   c1        c2        c3        c4 \n\"numeric\" \"numeric\" \"logical\" \"numeric\" \n> sapply(data,clas)\nError in match.fun(FUN) : 找不到对象'clas'\n> sapply(data,class)\n   c1        c2        c3        c4 \n\"numeric\" \"integer\" \"logical\"  \"factor\" \n> sqpply(data,typeof)\nError in sqpply(data, typeof) : 没有\"sqpply\"这个函数\n> sapply(data,typeof)\n   c1        c2        c3        c4 \n\"double\" \"integer\" \"logical\" \"integer\" \n> \n</code></pre>\n<h2>数据类型之间的转换</h2>\n<p><strong>转换 ：　as.数据类型()</strong>\n<strong>判断：is.数据类型()　sapply(参数，data/typeof/mode)</strong></p>\n<pre><code class=\"language-r\">> x6 &#x3C;- c(1,2,3,4)\n> sapply(x6,class)\n[1] \"numeric\" \"numeric\" \"numeric\" \"numeric\"\n> x7 &#x3C;- as.character(x6)\n> sapply(x7,class)\n      1           2           3           4 \n\"character\" \"character\" \"character\" \"character\" \n</code></pre>\n<h1>向量</h1>\n<h2>c</h2>\n<p>创建向量，使用c函数创建向量，同一向量中数据类型必须一致。</p>\n<pre><code class=\"language-r\">> x8 &#x3C;- 1:5\n> x8\n[1] 1 2 3 4 5\n> x9 &#x3C;- c(1,2,3)\n> x9\n[1] 1 2 3\n</code></pre>\n<h2>seq（Sequence）</h2>\n<p>seq(from = 首项，to = 尾项，by = 步长，length.out = 长度，along.with = 指向另一个向量的长度，表示此向量与另一个向量长度相同)</p>\n<pre><code class=\"language-cpp\">> seq(0,10,by=0.5)\n</code></pre>\n<p>起始是0，结尾是10，by设置的是步长，步长是0.5。</p>\n<pre><code class=\"language-cpp\">> my_seq &#x3C;- seq(5,10,length=30)\n</code></pre>\n<p>设定长度为30，然后自动计算步长输出。</p>\n</li>\n</ol>\n<pre><code class=\"language-r\">> a1 &#x3C;- seq(1,11,2)\n> a1\n[1]  1  3  5  7  9 11\n> a1 &#x3C;- seq(1,11,length.out=6)\n> a1\n[1]  1  3  5  7  9 11\n> a1 &#x3C;- seq(1,11,by=6)\n> a1\n[1] 1 7\n> a1 &#x3C;- seq(1,11,length.out=2)\n> a1\n[1]  1 11\n> a2 &#x3C;- seq(1,8,along.with = a1)\n> a2\n[1] 1 8\n> a3 &#x3C;- seq(1,8,by=4)\n> a3\n[1] 1 5\n> a4 &#x3C;- seq(1,8,length.out=2)\n> a4 \n[1] 1 8\n</code></pre>\n<h2>rep（Replicate）</h2>\n<p>Replicate：复制。\nrep(数列，times = 整体重复次数，each = 单个重复次数，length.out = 数列长度)</p>\n<pre><code class=\"language-r\">> a4 &#x3C;- seq(1,8,2)\n> a4\n[1] 1 3 5 7\n> a5 &#x3C;- rep(a4,3)\n> a5\n [1] 1 3 5 7 1 3 5 7 1 3 5 7\n> a6 &#x3C;- rep(a4,each=3)\n> a6\n [1] 1 1 1 3 3 3 5 5 5 7 7 7\n> a7 &#x3C;- rep(a4,times=3)\n> a7\n [1] 1 3 5 7 1 3 5 7 1 3 5 7\n> a8 &#x3C;- rep(a4,length.out = 8)\n> a8\n[1] 1 3 5 7 1 3 5 7\n> a8 &#x3C;- rep(a4,length.out = 7)\n> a8\n[1] 1 3 5 7 1 3 5\n</code></pre>\n<pre><code class=\"language-cpp\">> rep(c(0,1,2),times = 10)\n [1] 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1 2 0 1\n[24] 2 0 1 2 0 1 2\n</code></pre>\n<p>0，1，2整体复制十次</p>\n<pre><code class=\"language-cpp\">> rep(c(0,1,2),each= 10)\n [1] 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 2 2 2\n[24] 2 2 2 2 2 2 2\n</code></pre>\n<p>0，1，2每一个单独复制十次</p>\n<h2>c</h2>\n<pre><code class=\"language-cpp\">> num_vect &#x3C;- c(0.5,55,-10,6)\n</code></pre>\n<p>用c函数创建一个向量</p>\n<pre><code class=\"language-cpp\">> tf &#x3C;- num_vect &#x3C; 1\n</code></pre>\n<p>tf中存放的是num_vect中每一个数对应条件的逻辑值</p>\n<pre><code class=\"language-cpp\">> my_char &#x3C;- c(\"My\",\"name\",\"is\")\n</code></pre>\n<p>创建一个字符向量</p>\n<pre><code class=\"language-cpp\">> my_char\n[1] \"My\"   \"name\" \"is\"  \n</code></pre>\n<p>查看这个字符向量</p>\n<pre><code class=\"language-cpp\">> paste(my_char,collapse = \" \")\n[1] \"My name is\"\n</code></pre>\n<p>将字符向量中的字符合并以空格分隔</p>\n<pre><code class=\"language-cpp\">> my_name&#x3C;-c(my_char,\"your_name_here\")\n> my_name\n[1] \"My\"             \"name\"          \n[3] \"is\"             \"your_name_here\"\n</code></pre>\n<p>拼接字符串</p>\n<pre><code class=\"language-cpp\">> paste(my_name,collapse = \" \")\n[1] \"My name is your_name_here\"\n\n> paste(\"Hello\",\"world!\",sep=\" \")\n[1] \"Hello world!\"\n\n> paste(c(\"X\",\"Y\",\"Z\"),sep=\" \")\n[1] \"X\" \"Y\" \"Z\"\n\n> paste(1:3,c(\"X\",\"Y\",\"Z\"),sep=\" \")\n[1] \"1 X\" \"2 Y\" \"3 Z\"\n\n> paste(1:3,c(\"X\",\"Y\",\"Z\"),sep=\"\")\n[1] \"1X\" \"2Y\" \"3Z\"\n\n> paste(LETTERS,1:4,sep=\"-\")\n [1] \"A-1\" \"B-2\" \"C-3\" \"D-4\" \"E-1\" \"F-2\" \"G-3\"\n [8] \"H-4\" \"I-1\" \"J-2\" \"K-3\" \"L-4\" \"M-1\" \"N-2\"\n[15] \"O-3\" \"P-4\" \"Q-1\" \"R-2\" \"S-3\" \"T-4\" \"U-1\"\n[22] \"V-2\" \"W-3\" \"X-4\" \"Y-1\" \"Z-2\"\n</code></pre>\n<p>将字符向量合并成一个并用空格隔开\nLETTERS是R中预定义的，指A-Z</p>\n<pre><code class=\"language-cpp\">> x[is.na(x)]\n</code></pre>\n<p>打印出x中所有的Na值</p>\n<pre><code class=\"language-cpp\">> y &#x3C;- x[!is.na(x)]\n> y\n [1] -0.2350558 -0.2479688 -0.6450823 -0.4085304\n [5]  0.1959802  0.5181858  1.0478624  1.3596186\n [9] -0.6933137 -0.9564063  2.8779701 -1.6199365\n[13] -0.2687278  0.8495834  0.1961917  1.6297820\n[17]  0.2874848  0.2741789  0.1362384  1.5872867\n</code></pre>\n<p>将x中所有不是na的值打印出来并赋值给y</p>\n<pre><code class=\"language-cpp\">> x\n [1]         NA -0.2350558         NA -0.2479688\n [5] -0.6450823 -0.4085304         NA         NA\n [9]  0.1959802         NA  0.5181858  1.0478624\n[13]  1.3596186 -0.6933137         NA         NA\n[17] -0.9564063  2.8779701         NA         NA\n[21] -1.6199365         NA -0.2687278  0.8495834\n[25]         NA         NA  0.1961917  1.6297820\n[29]         NA  0.2874848         NA  0.2741789\n[33]         NA  0.1362384         NA         NA\n[37]         NA         NA         NA  1.5872867\n> x[x>0]\n [1]        NA        NA        NA        NA\n [5] 0.1959802        NA 0.5181858 1.0478624\n [9] 1.3596186        NA        NA 2.8779701\n[13]        NA        NA        NA 0.8495834\n[17]        NA        NA 0.1961917 1.6297820\n[21]        NA 0.2874848        NA 0.2741789\n[25]        NA 0.1362384        NA        NA\n[29]        NA        NA        NA 1.5872867\n> x[x&#x3C;0]\n [1]         NA -0.2350558         NA -0.2479688\n [5] -0.6450823 -0.4085304         NA         NA\n [9]         NA -0.6933137         NA         NA\n[13] -0.9564063         NA         NA -1.6199365\n[17]         NA -0.2687278         NA         NA\n[21]         NA         NA         NA         NA\n[25]         NA         NA         NA         NA\n> x[!is.na(x) &#x26; x>0]\n [1] 0.1959802 0.5181858 1.0478624 1.3596186\n [5] 2.8779701 0.8495834 0.1961917 1.6297820\n [9] 0.2874848 0.2741789 0.1362384 1.5872867\n</code></pre>\n<p>x[x>0] 把x中小于零的数字剔除，x[x&#x3C;0]把x中大于零的数字剔除。\nx[!is.na(x) &#x26; x>0]把x中小于零和na值剔除。</p>\n<pre><code class=\"language-cpp\">> x[c(3,5,7)]\n[1] -0.8349965 -0.1248848         NA\n> x[0]\nnumeric(0)\n> x[c(-2,-10)]\n [1] -1.6075546 -0.8349965 -1.6337176 -0.1248848\n [5]         NA         NA -0.4736692         NA\n [9]         NA -0.6819199 -0.5073136  0.9675951\n[13]  1.2769949  1.4313526         NA         NA\n[17]         NA         NA -1.1528907         NA\n[21]         NA  1.9626638 -0.9895084         NA\n[25]         NA         NA -0.5197052         NA\n[29]         NA         NA -1.0084469         NA\n[33] -0.1174404  0.9598553  2.5671915         NA\n[37]         NA  1.1656769\n>  x[-c(2,10)]\n [1] -1.6075546 -0.8349965 -1.6337176 -0.1248848\n [5]         NA         NA -0.4736692         NA\n [9]         NA -0.6819199 -0.5073136  0.9675951\n[13]  1.2769949  1.4313526         NA         NA\n[17]         NA         NA -1.1528907         NA\n[21]         NA  1.9626638 -0.9895084         NA\n[25]         NA         NA -0.5197052         NA\n[29]         NA         NA -1.0084469         NA\n[33] -0.1174404  0.9598553  2.5671915         NA\n[37]         NA  1.1656769\n</code></pre>\n<p>使用c函数创建索引，索引会从1开始，而非0。\nx[c(-2,-10)]拿到除了2-10之间所有的元素且x[-c(2,10)]与之等效</p>\n<h2>向量索引</h2>\n<p><strong>通过下标索引：</strong></p>\n<pre><code class=\"language-r\">> a9[1:8]\n[1] 1 2 3 4 5 6 7 8\n> a10 &#x3C;- c(1,5)\n> a10\n[1] 1 5\n> a9 \n[1] 1 2 3 4 5 6 7 8\n> a9[c(1,4,5)]\n[1] 1 4 5\n> a9[-1]\n[1] 2 3 4 5 6 7 8\n> a9[-2]\n[1] 1 3 4 5 6 7 8\n> a9[-c(1:3)]\n[1] 4 5 6 7 8\n> a9[c(TRUE,TRUE,FALSE,FALSE,FALSE)]\n[1] 1 2 6 7\n</code></pre>\n<h2>which索引</h2>\n<pre><code class=\"language-r\">> x1&#x3C;-c(1:9)//创建序列\n> x1\n[1] 1 2 3 4 5 6 7 8 9\n> which(x1==1)//找出序列中等于1的位置\n[1] 1\n> which(x1==1|x1==5)//找出序列中等于1或等于5 的位置\n[1] 1 5\n> which(x1>1|x1 &#x3C; 5)\n[1] 1 2 3 4 5 6 7 8 9\n> which(x1>1&#x26;x1 &#x3C; 5)\n[1] 2 3 4\n> which.max(x1)//找出序列中最大值\n[1] 9\n> which.min(x1)\n[1] 1\n</code></pre>\n<h2>向量编辑</h2>\n<p><strong>append（）：向量后面补充</strong></p>\n<pre><code class=\"language-r\">> x1 &#x3C;- c(1:9)//创建向量\n> x1\n[1] 1 2 3 4 5 6 7 8 9\n> x2 &#x3C;- c(x1,c(10:20))//追加10个元素\n> x2\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20\n> x3 &#x3C;- append(x2,c(21:30))//另一种追加方式\n> x3\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n> x3 &#x3C;- append(x2,c(21:30),0)//新增加的参数是追加的位置\n> x3\n [1] 21 22 23 24 25 26 27 28 29 30  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20\n> x3[1] &#x3C;- 1//更新1位置的数为1\n> x3[2] &#x3C;- 2\n> x3\n [1]  1  2 23 24 25 26 27 28 29 30  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20\n> x1[1:5] &#x3C;- c(1:5)//更新一段位置\n> x1\n[1] 1 2 3 4 5 6 7 8 9\n> x3[1:5] &#x3C;- c(1:5)\n> x3\n [1]  1  2  3  4  5 26 27 28 29 30  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20\n> x1 &#x3C;- x1[-1]//删除位置1的向量\n> x1\n[1] 2 3 4 5 6 7 8 9\n</code></pre>\n<h2>向量排序</h2>\n<p><strong>sort(序列名，升序为TRUE降序为FALSE，对na值的处理)排序</strong></p>\n<pre><code class=\"language-r\">> sort(x3,TRUE)\n [1] 30 29 28 27 26 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  5  4  4  3  3  2  2  1  1\n> x3\n [1]  1  2  3  4  5 26 27 28 29 30  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20\n> x3[31] = NA\n> x3\n [1] 30 29 28 27 26 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  5  4  4  3  3  2  2  1  1 NA\n> sort(x3,TRUE,na.last = TRUE)\n [1] 30 29 28 27 26 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  5  4  4  3  3  2  2  1  1 NA\n> sort(x3,TRUE,na.last = FALSE)\n [1] NA 30 29 28 27 26 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  5  4  4  3  3  2  2  1  1 \n</code></pre>\n<h1>数据框</h1>\n<h2>创建数据框</h2>\n<p><strong>模型</strong></p>\n<pre><code class=\"language-r\">name1 &#x3C;- c(data1,data2,data3,data4)//创建数据对象\nname2 &#x3C;- c(data1,data2,data3,data4)\nname3 &#x3C;- c(data1,data2,data3,data4)\ntable &#x3C;- data.frame(name1,name2,name3)//转换成表格\n</code></pre>\n<p><strong>例子</strong></p>\n<pre><code class=\"language-r\">> x1 &#x3C;- c(1:4)\n> x1\n> x2 &#x3C;- c(2:5)\n> x3 &#x3C;- c(3:6)\n> x4 &#x3C;-data.frame(x1,x2,x3)\n> x4\n  x1 x2 x3\n1  1  2  3\n2  2  3  4\n3  3  4  5\n4  4  5  6\n</code></pre>\n<h2>数据框索引</h2>\n<p><strong>模型</strong></p>\n<pre><code class=\"language-r\">table [,1]//显示第一列的数据\ntable [1,]//显示第一行的数据\nsubset(table,name1==\"condition\") //冒号里面为条件，输出这一行的数据\n</code></pre>\n<p><strong>例子</strong></p>\n<pre><code class=\"language-r\">> x1 &#x3C;- c(1:4)\n> x1\n[1] 1 2 3 4\n> x2 &#x3C;- c(2:5)\n> x3 &#x3C;- c(3:6)\n> x4 &#x3C;-data.frame(x1,x2,x3)\n> x4\n  x1 x2 x3\n1  1  2  3\n2  2  3  4\n3  3  4  5\n4  4  5  6\n> x4[,1]\n[1] 1 2 3 4\n> subset(x4,x1=\"1\")\n  x1 x2 x3\n1  1  2  3\n2  2  3  4\n3  3  4  5\n4  4  5  6\n> subset(x4,x1==\"1\")\n  x1 x2 x3\n1  1  2  3\n> subset(x4,x2==\"1\")\n[1] x1 x2 x3\n> subset(x4,x2==\"3\")\n x1 x2 x3\n2  2  3  4\n</code></pre>\n<h1>列表</h1>\n<h2>创建列表</h2>\n<pre><code class=\"language-r\">> data &#x3C;- list(a = c(1:5),b=c(\"a1\",\"a2\",\"a3\"),c=c(\"true\",\"false\"))\n> data\n$a\n[1] 1 2 3 4 5\n\n$b\n[1] \"a1\" \"a2\" \"a3\"\n\n$c\n[1] \"true\"  \"false\"\n\n> summary(data)\n  Length Class  Mode     \na 5      -none- numeric  \nb 3      -none- character\nc 2      -none- character\n> data[[3]]\n[1] \"true\"  \"false\"\n> data[[1]]\n[1] 1 2 3 4 5\n> data[[2]]\n[1] \"a1\" \"a2\" \"a3\"\n> data[[\"a\"]]\n[1] 1 2 3 4 5\n> \n</code></pre>\n<h2>删除列表</h2>\n<pre><code class=\"language-r\">> data$a &#x3C;-NULL //删除a列\n> data\n$b\n[1] \"a1\" \"a2\" \"a3\"\n\n$c\n[1] \"true\"  \"false\"\n> data$b&#x3C;-NULL//删除b列\n> data$c&#x3C;-NULL\n> data\nnamed list()\n> data1 &#x3C;- c(data,list(e= c(1:5)))//列增加\n> data1\n$e\n[1] 1 2 3 4 5\n\n> data1 &#x3C;- c(data1,list(a=c(1:5)))\n> data1\n$e\n[1] 1 2 3 4 5\n\n$a\n[1] 1 2 3 4 5\n\n> data1 &#x3C;- c(data1,list(b = c(1:5)))\n> data1\n$e\n[1] 1 2 3 4 5\n\n$a\n[1] 1 2 3 4 5\n\n$b\n[1] 1 2 3 4 5\n\n> data1 &#x3C;- c(data1,list(c=c(1:5)))\n> data1\n$e\n[1] 1 2 3 4 5\n\n$a\n[1] 1 2 3 4 5\n\n$b\n[1] 1 2 3 4 5\n\n$c\n[1] 1 2 3 4 5\n</code></pre>\n<h1>总结：</h1>\n<ol>\n<li>getwd()/setwd() 查看并设置工作路径。</li>\n<li>is.numeric()/as.numeric 判断并转换数据类型。</li>\n<li>c()/seq()/rep() 创建向量</li>\n<li>which（）索引，下标索引，matrix（）创建矩阵。</li>\n</ol>\n<h1>矩阵</h1>\n<h2>创建矩阵</h2>\n<p><strong>matrix</strong></p>\n<pre><code class=\"language-r\">> a &#x3C;- matrix(c(1:4,2:5,3:6,4:7),ncol=4,nrow = 4)\n> a\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    2    3    4    5\n[3,]    3    4    5    6\n[4,]    4    5    6    7\n</code></pre>\n<h2>创建单位矩阵</h2>\n<p><strong>diag</strong></p>\n<pre><code class=\"language-r\">> diag(x=1,nrow = 4,ncol = 4)\n     [,1] [,2] [,3] [,4]\n[1,]    1    0    0    0\n[2,]    0    1    0    0\n[3,]    0    0    1    0\n[4,]    0    0    0    1\n</code></pre>\n<h2>创建零矩阵</h2>\n<p><strong>diag</strong></p>\n<pre><code>> e &#x3C;- diag(x=0,nrow = 3,ncol = 3)\n> e\n     [,1] [,2] [,3]\n[1,]    0    0    0\n[2,]    0    0    0\n[3,]    0    0    0\n</code></pre>\n<h2>创建对角矩阵</h2>\n<p><strong>diag</strong></p>\n<pre><code>> e &#x3C;- diag(1:4,ncol = 4,nrow=4)\n> e\n     [,1] [,2] [,3] [,4]\n[1,]    1    0    0    0\n[2,]    0    2    0    0\n[3,]    0    0    3    0\n[4,]    0    0    0    4\n</code></pre>\n<h2>创建上/下三角矩阵</h2>\n<p><strong>lower,tre()</strong></p>\n<pre><code>> a[lower.tri(a,diag = FALSE)] &#x3C;- 0\n> a\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    0    3    4    5\n[3,]    0    0    5    6\n[4,]    0    0    0    7\n</code></pre>\n<p><strong>upper.tri()</strong></p>\n<pre><code>> a[upper.tri(a,diag = FALSE)] &#x3C;- 0\n> a\n     [,1] [,2] [,3] [,4]\n[1,]    1    0    0    0\n[2,]    2    3    0    0\n[3,]    3    4    5    0\n[4,]    4    5    6    7\n</code></pre>\n<h2>矩阵转置</h2>\n<pre><code>> a\n     [,1] [,2] [,3] [,4]\n[1,]    1    0    0    0\n[2,]    2    3    0    0\n[3,]    3    4    5    0\n[4,]    4    5    6    7\n> a &#x3C;- t(a)\n> a\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    0    3    4    5\n[3,]    0    0    5    6\n[4,]    0    0    0    7\n</code></pre>\n<h2>求行列式的值</h2>\n<pre><code>> a\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    0    3    4    5\n[3,]    0    0    5    6\n[4,]    0    0    0    7\n> det(a)\n[1] 105\n</code></pre>\n<h2>矩阵求逆</h2>\n<p><strong>solve</strong></p>\n<pre><code>> a\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    0    3    4    5\n[3,]    0    0    5    6\n[4,]    0    0    0    7\n> solve(a)\n     [,1]       [,2]        [,3]        [,4]\n[1,]    1 -0.6666667 -0.06666667 -0.03809524\n[2,]    0  0.3333333 -0.26666667 -0.00952381\n[3,]    0  0.0000000  0.20000000 -0.17142857\n[4,]    0  0.0000000  0.00000000  0.14285714\n</code></pre>\n<h2>矩阵求秩</h2>\n<pre><code class=\"language-r\">> a\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    0    3    4    5\n[3,]    0    0    5    6\n[4,]    0    0    0    7\n> qr(a)$rank\n[1] 4\n</code></pre>\n<h2>求解特征值和特征向量</h2>\n<p><strong>eigen</strong></p>\n<pre><code class=\"language-r\">> eigen(a)\neigen() decomposition\n$values\n[1] 7 5 3 1\n\n$vectors\n          [,1]      [,2]      [,3] [,4]\n[1,] 0.5602873 0.6163156 0.7071068    1\n[2,] 0.6645268 0.7043607 0.7071068    0\n[3,] 0.4690778 0.3521804 0.0000000    0\n[4,] 0.1563593 0.0000000 0.0000000    0\n</code></pre>\n<h2>正交矩阵</h2>\n<p><strong>t(a)%*%a = E</strong></p>\n<pre><code class=\"language-r\">> c &#x3C;- matrix(c(sqrt(2)/2,-sqrt(2)/2,sqrt(2)/2,sqrt(2)/2),nrow = 2)\n> c\n           [,1]      [,2]\n[1,]  0.7071068 0.7071068\n[2,] -0.7071068 0.7071068\n> value &#x3C;- t(c)%*%c\n> value\n     [,1] [,2]\n[1,]    1    0\n[2,]    0    1\n</code></pre>\n<h1>基本图形</h1>\n<h2>使用图形</h2>\n<pre><code class=\"language-r\">//绑定mtcars这个数据集\n> attach(mtcars)\n//以x轴为wt（重量），y轴mpg（耗油加仑量）为坐标画图\n> plot(wt,mpg)\n//画出散点图的拟合曲线\n> abline(lm(mpg~wt))\n//增加标题\n> title(\"sss\")\n//取消绑定\n> detach(mtcars)\n</code></pre>\n<h2>以文件形式输出保存d</h2>\n<p>在代码开头结尾加上</p>\n<pre><code class=\"language-r\">> pdf(\"project_name\")\n> 代码块\n> dev.off\n</code></pre>\n<p><strong>例子：</strong></p>\n<pre><code class=\"language-r\">> pdf(\"mypicture.pdf\")\n> attach(mtcars)\n> plot(wt,mpg)\n> abline(lm(mpg~wt))\n> title(\"sss\")\n> detach(mtcars)\n> dev.off\n</code></pre>\n<h2>plot</h2>\n<pre><code class=\"language-r\">> dose &#x3C;- c(20,30,40,45,60)\n> drugA &#x3C;- c(16,20,27,40,60)\n> drugB &#x3C;- c(15,18,25,31,40)\n> plot(dose,drugA)\n</code></pre>\n<p><strong>只绘制点：</strong></p>\n<pre><code class=\"language-r\">> plot(dose,drugA)\n</code></pre>\n<p><strong>绘制点和线</strong></p>\n<pre><code class=\"language-r\">> plot(dose,drugA,type = \"b\")\n</code></pre>\n<p><strong>只绘制线</strong></p>\n<pre><code class=\"language-r\">> plot(dose,drugA,type = \"c\")\n</code></pre>\n<h2>条形图</h2>\n<p>create a bar plot wiht vertial or horizontal bars\n<strong>barplot（）</strong></p>\n<pre><code class=\"language-r\">> a &#x3C;- c(1,2,3)\n> a\n[1] 1 2 3\n> barplot(a,main = \"main\",xlab = \"x\",ylab = \"y\")\n</code></pre>\n<h2>箱线图</h2>\n<p><strong>boxplot（）</strong></p>\n<pre><code class=\"language-r\">> boxplot(mpg~cyl,data = mtcars,main=\"mian\",xlab=\"xlab\",ylab=\"ylab\")\n> boxplot(mpg~cyl,data = mtcars,notch=TRUE,col=\"red\",main=\"mian\",xlab=\"xlab\",ylab=\"ylab\")\n</code></pre>\n<h2>小提琴图</h2>\n<pre><code class=\"language-r\">> library(vioplot)\n> x1 &#x3C;- mtcars$mpg[mtcars$cyl==4]\n> x2 &#x3C;- mtcars$mpg[mtcars$cyl==6]\n> x3 &#x3C;- mtcars$mpg[mtcars$cyl==8]\n> vioplot(x1,x2,x3,names=c(\"x1\",\"x2\",\"x3\"),col=\"gold\")\n[1] 10.4 33.9\n> title(\"thi is a title\")\n</code></pre>\n<h1>散点图</h1>\n<h2>散点图矩阵</h2>\n<pre><code>> pairs(~mpg + disp + drat + wt,data = mtcars,main=\"s\")\n</code></pre>\n<p><strong>上三角：</strong></p>\n<pre><code>> pairs(~mpg + disp + drat + wt,data = mtcars,main=\"s\",upper.panel = NULL)\n</code></pre>\n<p><strong>另一种创建散点矩阵的方式：</strong></p>\n<pre><code>> scatterplotMatrix(~mpg+disp+drat+wt,data = mtcars,spread = FALSE,lty.smooth = 2,main=\"sss\")\n</code></pre>\n<h2>高密度散点图</h2>\n<pre><code>> set.seed(1234)\n> n &#x3C;- 10000\n> c1 &#x3C;- matrix(rnorm(n,mean = 0,sd=.5),ncol = 2)\n> c2 &#x3C;- matrix(rnorm(n,mean = 3,sd=2),ncol = 2)\n> mydata&#x3C;- rbind(c1,c2)\n> mydata&#x3C;-as.data.frame(mydata)\n> names(mydata) &#x3C;- c(\"x\",\"y\")\n> with(mydata,plot(x,y,pch=19,main = \"main\"))\n</code></pre>\n<p>我们会发现点很密集不易观察。\n<strong>smoothScatter：</strong></p>\n<pre><code>with(mydata,smoothScatter(x,y,main = \"main\"))\n</code></pre>\n<h2>3d散点图</h2>\n<pre><code>> library(scatterplot3d)\n> attach(mtcars)\n> scatterplot3d(wt,disp,mpg,main = \"3d\")\n</code></pre>\n<p><strong>增强纵深，加上标线</strong></p>\n<pre><code>> scatterplot3d(wt,disp,mpg,pch=16,highlight.3d = TRUE,type =\"h\",  main = \"3d\")\n</code></pre>\n<p><strong>添加回归平面</strong></p>\n<pre><code>> s3d &#x3C;- scatterplot3d(wt,disp,mpg,pch=16,highlight.3d = TRUE,type =\"h\",  main = \"3d\")\n> fit &#x3C;- lm(mpg~wt+disp)\n> s3d$plane3d(fit)\n</code></pre>\n<p><strong>rgl</strong></p>\n<pre><code>> library(rgl)\n> plot3d(wt,disp,mpg,col = \"red\",size=5)\n> plot3d(wt,disp,mpg,xlab = \"xxxx\",ylab = \"yyy\",zlab = \"zzz\",main = \"main\", col = \"red\",size=5)\n</code></pre>\n<p><strong>Rcmdr</strong></p>\n<pre><code>> library(Rcmdr)\n> attach(mtcars)\n> scatter3d(mt,disp,mpg)\n</code></pre>\n<h2>折线图</h2>\n<p>不加type参数是散点图，加上是折线图，不同参数对应不同折线。</p>\n<pre><code>> plot(t1$age,t1$circumference,xlab = \"xx\",ylab = \"yy\",main = \"main\")\n> plot(t1$age,t1$circumference,xlab = \"xx\",ylab = \"yy\",main = \"main\",type = \"b\")\n</code></pre>","excerpt":"文件设置 列出当前工作空间目录下的文件 获取当前工作路径 设置当前工作路径： 退出并保持当前工作空间 通过args查看函数的所有参数 获取当前工作目录并赋值给old.dir 在当前工作目录想创建一个文件 列出当前目录下的文件 使用file.info…","fields":{"tagSlugs":["/tags/r-语言/"]},"frontmatter":{"title":"R-总结","tags":["R 语言"],"date":"December 15, 2019"}}},"pageContext":{"slug":"/r-summary/"}}}