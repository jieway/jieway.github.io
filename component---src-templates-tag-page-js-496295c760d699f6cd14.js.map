{"version":3,"sources":["webpack:///./src/templates/tag-page.js"],"names":["TagRoute","render","posts","this","props","data","allMarkdownRemark","edges","title","site","siteMetadata","postLinks","map","post","key","node","fields","slug","to","frontmatter","location","totalCount","pageContext","tag","React","Component","pageQuery"],"mappings":"2OAKMA,E,kGACJC,OAAA,WAEE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC1CC,EAAQL,KAAKC,MAAMC,KAAKI,KAAKC,aAAaF,MAC1CG,EAAYT,EAAMU,KAAI,SAAAC,GAC1B,OACE,kBAAIC,IAAKD,EAAKE,KAAKC,OAAOC,MACxB,YAAC,OAAD,CAAMC,GAAIL,EAAKE,KAAKC,OAAOC,MAAOJ,EAAKE,KAAKI,YAAYX,WAK9D,OACE,YAAC,IAAD,CAAQY,SAAUjB,KAAKC,MAAMgB,UAC3B,YAAC,IAAD,CAAQZ,MAAOA,IACf,sBACGL,KAAKC,MAAMC,KAAKC,kBAAkBe,WADrC,uBAEGlB,KAAKC,MAAMkB,YAAYC,IAF1B,KAIA,sBAAKZ,GACL,qBACE,YAAC,OAAD,CAAMO,GAAG,UAAT,sB,GAtBaM,IAAMC,WA6BdzB,YAER,IAAM0B,EAAS","file":"component---src-templates-tag-page-js-496295c760d699f6cd14.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Helmet from \"react-helmet\"\nimport Layout from \"../layouts/index.js\"\n\nclass TagRoute extends React.Component {\n  render() {\n    //console.log(this.props)\n    const posts = this.props.data.allMarkdownRemark.edges\n    const title = this.props.data.site.siteMetadata.title\n    const postLinks = posts.map(post => {\n      return (\n        <li key={post.node.fields.slug}>\n          <Link to={post.node.fields.slug}>{post.node.frontmatter.title}</Link>\n        </li>\n      )\n    })\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet title={title} />\n        <h2>\n          {this.props.data.allMarkdownRemark.totalCount} posts tagged with “\n          {this.props.pageContext.tag}”\n        </h2>\n        <ul>{postLinks}</ul>\n        <p>\n          <Link to=\"/tags/\">Browse all tags</Link>\n        </p>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}